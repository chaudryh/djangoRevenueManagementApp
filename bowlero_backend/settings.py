"""
Django settings for bowlero_backend project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Get ENV
try:
    from bowlero_backend.ENV.env import ENV
except:
    ENV = 'LOCAL'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%@q#%jj!c-xm)eat@n1@!%-c9xn^)6qj6u0^*@w#yhm_$6b-4o'

# SECURITY WARNING: don't run with debug turned on in production!
if ENV in ['DEV', 'PROD']:
    DEBUG = False
else:
    DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    # 'rest_framework',
    'session_security',
]

INSTALLED_APPS += [
    'bowlero_backend',
    'accounts',
    'Models',
    'landing',
    'Audit',
    'Email.EmailNotice',
    'Email.EmailNoticeLog',
    'Weather.Weather',
    'Alcohol.Alcohol',
    'Alcohol.AlcoholTier',
    'Alcohol.AlcoholChangeReport',
    'RM.Centers',
    'RM.OpenHours',
    'RM.Pricing',
    'RM.PricingTable',
    'RM.PricingTier',
    'RM.Food',
    'RM.ProductOpt',
    'RM.ProductSchedule',
    'RM.EventCalendar',
    'RM.Bundle',
    'Event.EventPricingTier',
    'Event.EventPricing',
    'Event.EventPricingTable',
    'Event.EventAllocation',
    'Event.EventPriceByCenter',
    'Event.EventPriceByCenterTest',
    'Event.EventChangeReport',
    'Event.EventPromo',
    'Event.EventOverview',
    'Event.EventOverviewTest',
    'Event.EventCenterTier',
    'Event.EventRMPS',
    'Event.EventRMPSTest',
    'League.LeaguePricingSheet',
    'League.LeagueCenterInfo',
    'RM.CenterTest',
]

INSTALLED_APPS += [
    'BowlingShoe.BSChangeReport',
]

INSTALLED_APPS += [
    'Food.FoodChangeReport',
    'Food.FoodByCenter',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'session_security.middleware.SessionSecurityMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'bowlero_backend.middleware.simple.simpleMiddleware',
    'bowlero_backend.middleware.test.UserBasedExceptionMiddleware',
]

ROOT_URLCONF = 'bowlero_backend.urls'

VERSION = '20190507_3'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'bowlero_backend.context_processors.version',
            ],
        },
    },
]

WSGI_APPLICATION = 'bowlero_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
if ENV == 'PROD':
    DATABASES = {
        'default': {
            'ENGINE': 'sqlserver',
            'HOST': '10.19.105.121',  # Replace with host name where you have MSSQL server running
            'NAME': 'RevenueManagement',  # Replace with name of the database on the MSSQL server
            'USER': 'RevUser',  # Replace with user name
            'PASSWORD': 'T3Tq@W)r1d',  # Replace with password
        }
    }
elif ENV == 'DEV':
    DATABASES = {
        'default': {
            'ENGINE': 'sqlserver',
            'HOST': '10.12.103.105',  # Replace with host name where you have MSSQL server running
            'NAME': 'RevenueManagement',  # Replace with name of the database on the MSSQL server
            'USER': 'RevUser',  # Replace with user name
            'PASSWORD': 'B0wl3r0@2018',  # Replace with password
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        },
        'prod': {
            'ENGINE': 'sqlserver',
            'HOST': '10.19.105.121',
            'NAME': 'RevenueManagement',
            'USER': 'RevUser',
            'PASSWORD': 'T3Tq@W)r1d',
        },
        'prod_food': {
            'ENGINE': 'sqlserver',
            'HOST': '10.19.105.121',
            'NAME': 'Reporting',
            'USER': 'RevUser',
            'PASSWORD': 'T3Tq@W)r1d',
        },
        'dev': {
            'ENGINE': 'sqlserver',
            'HOST': '10.12.103.105',
            'NAME': 'RevenueManagement',
            'USER': 'RevUser',
            'PASSWORD': 'B0wl3r0@2018',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'static'
STATICFILES_DIRS = [os.path.join(BASE_DIR,'static_public'),]

# MEDIA_ROOT = "/Users/mayaroselip/Documents/LodgIQ/_source/lodgiq_ingestor/webadmin/didash/didash/media/"
# MEDIA_URL = "http://localhost:8000/tracking/static/"
MEDIA_URL = '/media/'
MEDIA_ROOT = 'media'


# Custom User
AUTH_USER_MODEL='accounts.User'

# CORS setting
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

# Django Rest Framework
REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    # ]
}

# Celery settings
from kombu import Exchange, Queue

# if 'localhost' not in os.environ.get('HOSTNAME', ''):
CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'
# else:
#     CELERY_BROKER_URL = 'redis://54.237.230.87:6379/0'
    # CELERY_BROKER_URL = 'redis://localhost:6379/0'

#: Only add pickle to this list if your broker is secured
#: from unwanted access (see userguide/security.html)
CELERY_ACCEPT_CONTENT = ['json']
# CELERY_RESULT_BACKEND = 'db+sqlite:///db.sqlite3'
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
# timezone = TIME_ZONE

CELERYD_CONCURRENCY = 1
CELERYD_MAX_TASKS_PER_CHILD = 1

# Celery import tasks
CELERY_IMPORTS = ('Celery.RollOver.tasks',
                  'Celery.ServerStatus.tasks',
                  'Celery.tasks',
                  )

# Queues and Router
CELERY_QUEUES = (
    # Queue('queue_add_reduce', exchange=Exchange('calculate_exchange', type='direct'), routing_key='key1'),
    Queue('celery', Exchange('celery'), routing_key='celery'),
)

CELERY_ROUTES = {
    'Celery.RollOver.tasks': {'queue': 'celery', 'routing_key': 'celery'},
    # 'celeryservice.tasks.reduce': {'queue': 'queue_add_reduce', 'routing_key': 'key1', 'delivery_mode': 1},
}

# Session
# SESSION_COOKIE_AGE = 1200
if ENV in ['DEV', 'PROD']:
    SESSION_SECURITY_WARN_AFTER = 60 * 21
    SESSION_SECURITY_EXPIRE_AFTER = 60 * 22
    SESSION_EXPIRE_AT_BROWSER_CLOSE = True
else:
    SESSION_SECURITY_WARN_AFTER = 54000
    SESSION_SECURITY_EXPIRE_AFTER = 60000
    SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Email setting
EMAIL_NOTICE = True
EMAIL_USE_TLS = True
EMAIL_HOST = 'rich-smtp.na.amfbowl.net'
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_PORT = 25
EMAIL_SENDER = 'revenue_management@bowlerocorp.com'

# SSL setting
if ENV == 'PROD':
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
